---
- name: Set map fact
  ansible.builtin.set_fact:
    argocd_map:
      credentials:
        secret: argocd-secret
        server:
          admin:
            password: "{{ global_map.credentials.argocd.server.admin.password | string | password_hash('blowfish') }}"
          user:
            name: '{{ global_map.credentials.argocd.server.user.name }}'
            password: "{{ global_map.credentials.argocd.server.user.password | string | password_hash('blowfish') }}"
      ingress:
        class:
          name: cilium
        server:
          annotations:
            api:
              ingress.cilium.io/tls-passthrough: enabled
            grpc:
              ingress.cilium.io/tls-passthrough: enabled
          hostname:
            api: '{{ argocd_vars.kubernetes.server.ingress.subdomain.api }}.{{ externaldns_vars.cloudflare.host.domain }}'
            grpc: '{{ argocd_vars.kubernetes.server.ingress.subdomain.grpc }}.{{ externaldns_vars.cloudflare.host.domain }}'
      helm:
        application:
          name: argocd
        chart:
          reference: '{{ argocd_vars.kubernetes.helm.repository.org }}/{{ argocd_vars.kubernetes.helm.chart.name }}'
          version: '{{ argocd_vars.kubernetes.helm.chart.version[1:] }}'
        platform:
          key: https://github.com
          raw: https://raw.githubusercontent.com
        repository:
          name: '{{ argocd_vars.kubernetes.helm.repository.org }}/{{ argocd_vars.kubernetes.helm.repository.name }}'
          url: '{{ argocd_vars.kubernetes.helm.repository.url }}/{{ argocd_vars.kubernetes.helm.repository.name }}'
        timeout: 10m0s
      metrics:
        service:
          monitor:
            enabled: true
            scrape:
              # If `null`, default value is `victoriametrics_map.service.monitor.scrape.interval`
              interval: null
              # If `null`, default value is `victoriametrics_map.service.monitor.scrape.timeout`
              timeout: null
  run_once: true

- name: Set project fact
  ansible.builtin.set_fact:
    argocd_project:
      release:
        checksum: '{{ argocd_vars.release.version }}/{{ argocd_vars.release.checksum }}'
        file: '{{ argocd_vars.release.version }}/{{ argocd_vars.release.file }}'
        url: "{{
          '/'.join([argocd_map.helm.platform.key,
            argocd_vars.release.repository.org,
            argocd_vars.release.repository.name, 'releases', 'download'])
          }}"
      tag: '{{ argocd_vars.kubernetes.helm.chart.name }}-{{ argocd_map.helm.chart.version }}'
      url: '{{ argocd_map.helm.platform.key }}/{{ argocd_map.helm.repository.name }}/releases/tag'
  run_once: true

- name: Set resources fact
  ansible.builtin.set_fact:
    argocd_resources:
      server:
        users:
          - name: '{{ argocd_map.credentials.server.user.name }}'
            password: '{{ argocd_map.credentials.server.user.password }}'
            permissions: 'apiKey, login'
            role: admin
            enabled: true
