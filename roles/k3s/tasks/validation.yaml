---
- name: Role Facts
  ansible.builtin.import_tasks:
    file: facts.yaml

- name: Role Validation
  when: ('validation' in ansible_run_tags)
  run_once: true
  block:
    - name: Validate inventory
      ansible.builtin.assert:
        that: k3s_map.server.ha is truthy or k3s_map.server.non_ha is truthy
        fail_msg: |-
          ERROR: Invalid number of 'server' type nodes.
            - Defined nodes: {{ k3s_map.server.hosts | length }} ({{ k3s_map.server.hosts | join(', ') }})
            - Valid values: 1, higher than 2
          FIXES:
            - Update the number of 'server' type nodes, into inventory file.
        quiet: true

    - name: Cluster Validation
      block:
        - name: Validate cluster kubeconfig path
          ansible.builtin.stat:
            path: '{{ k3s_project.cluster.kubeconfig }}'
          register: kubeconfig
          changed_when: false

        - name: Get cluster resources
          kubernetes.core.k8s_info:
            kind: Node
            kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
            api_version: v1
          register: node
          when: kubeconfig.stat.exists

        - name: Validate cluster resources capacity
          ansible.builtin.assert:
            that:
              - (node.resources |
                  map(attribute='status.allocatable.memory') |
                  map('regex_replace', 'Ki$', '') |
                  map('int') | sum) > (k3s_map.node.kubelet.system_reserved.memory | regex_replace('Gi$', '') | int * 1024 * 1024)
              - (node.resources |
                  map(attribute='status.allocatable.cpu') |
                  map('int') | sum * 1000) > (k3s_map.node.kubelet.system_reserved.cpu | regex_replace('m$', '') | int)
            fail_msg: |-
              ERROR: Cluster resource capacity below minimum thresholds.
                - Total allocatable memory: {{
                    (node.resources |
                     map(attribute='status.allocatable.memory') |
                     map('regex_replace', 'Ki$', '') |
                     map('int') | sum / 1024 / 1024) | round(2)
                  }}GB (min: {{ k3s_map.node.kubelet.system_reserved.memory }})
                - Total allocatable CPU: {{
                    (node.resources |
                     map(attribute='status.allocatable.cpu') |
                     map('int') | sum * 1000)
                  }}m (min: {{ k3s_map.node.kubelet.system_reserved.cpu }})
            quiet: true
          when: kubeconfig.stat.exists

        - name: Get cluster system resources
          kubernetes.core.k8s_info:
            kind: Pod
            kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
            namespace: kube-system
            label_selectors:
              - app.kubernetes.io/name in (cilium-agent,coredns,metrics-server)
          register: system
          when: kubeconfig.stat.exists

        - name: Validate cluster system components
          ansible.builtin.assert:
            that:
              - system.resources |
                  selectattr('status.phase', 'equalto', 'Running') |
                  list | length > 0
              - system.resources |
                  rejectattr('status.phase', 'equalto', 'Running') |
                  list | length == 0
            fail_msg: |-
              ERROR: Cluster system components not healthy.
                - Running pods: {{
                    system.resources |
                    selectattr('status.phase', 'equalto', 'Running') |
                    list | length
                  }}
                - Non-running pods: {{
                    system.resources |
                    rejectattr('status.phase', 'equalto', 'Running') |
                    map(attribute='metadata.name') | join(', ')
                  }}
            quiet: true
          when: kubeconfig.stat.exists
